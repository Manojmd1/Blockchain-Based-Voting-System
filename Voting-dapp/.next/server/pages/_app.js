/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./context/constants.js":
/*!******************************!*\
  !*** ./context/constants.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CONTRACT_ABI\": () => (/* binding */ CONTRACT_ABI),\n/* harmony export */   \"CONTRACT_ADDRESS\": () => (/* binding */ CONTRACT_ADDRESS),\n/* harmony export */   \"OWNER_ADDRESS\": () => (/* binding */ OWNER_ADDRESS),\n/* harmony export */   \"VOTING_CONTRACT\": () => (/* binding */ VOTING_CONTRACT),\n/* harmony export */   \"checkIfWalletIsConnected\": () => (/* binding */ checkIfWalletIsConnected),\n/* harmony export */   \"connectWallet\": () => (/* binding */ connectWallet),\n/* harmony export */   \"handleNetworkSwitch\": () => (/* binding */ handleNetworkSwitch)\n/* harmony export */ });\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethers */ \"ethers\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ethers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3modal */ \"web3modal\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _VotingOrganization_json__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./VotingOrganization.json */ \"./context/VotingOrganization.json\");\n\n\n\n//IMPORT CONTRACT ABI\n\nconst OWNER_ADDRESS = \"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\";\nconst CONTRACT_ADDRESS = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\nconst CONTRACT_ABI = _VotingOrganization_json__WEBPACK_IMPORTED_MODULE_3__.abi;\n//NETWORK\nconst networks = {\n    polygon_amoy: {\n        chainId: `0x${Number(80002).toString(16)}`,\n        chainName: \"Polygon Amoy\",\n        nativeCurrency: {\n            name: \"MATIC\",\n            symbol: \"MATIC\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://rpc-amoy.polygon.technology/\"\n        ],\n        blockExplorerUrls: [\n            \"https://www.oklink.com/amoy\"\n        ]\n    },\n    polygon_mumbai: {\n        chainId: `0x${Number(80001).toString(16)}`,\n        chainName: \"Polygon Mumbai\",\n        nativeCurrency: {\n            name: \"MATIC\",\n            symbol: \"MATIC\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://rpc.ankr.com/polygon_mumbai\"\n        ],\n        blockExplorerUrls: [\n            \"https://mumbai.polygonscan.com/\"\n        ]\n    },\n    polygon: {\n        chainId: `0x${Number(137).toString(16)}`,\n        chainName: \"Polygon Mainnet\",\n        nativeCurrency: {\n            name: \"MATIC\",\n            symbol: \"MATIC\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://rpc.ankr.com/polygon\"\n        ],\n        blockExplorerUrls: [\n            \"https://polygonscan.com/\"\n        ]\n    },\n    bsc: {\n        chainId: `0x${Number(56).toString(16)}`,\n        chainName: \"Binance Smart Chain Mainnet\",\n        nativeCurrency: {\n            name: \"Binance Chain Native Token\",\n            symbol: \"BNB\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://rpc.ankr.com/bsc\"\n        ],\n        blockExplorerUrls: [\n            \"https://bscscan.com\"\n        ]\n    },\n    base_mainnet: {\n        chainId: `0x${Number(8453).toString(16)}`,\n        chainName: \"Base Mainnet\",\n        nativeCurrency: {\n            name: \"ETH\",\n            symbol: \"ETH\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://mainnet.base.org/\"\n        ],\n        blockExplorerUrls: [\n            \"https://bscscan.com\"\n        ]\n    },\n    base_sepolia: {\n        chainId: `0x${Number(84532).toString(16)}`,\n        chainName: \"Base Sepolia\",\n        nativeCurrency: {\n            name: \"ETH\",\n            symbol: \"ETH\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"https://sepolia.base.org\"\n        ],\n        blockExplorerUrls: [\n            \"https://bscscan.com\"\n        ]\n    },\n    localhost: {\n        chainId: `0x${Number(31337).toString(16)}`,\n        chainName: \"localhost\",\n        nativeCurrency: {\n            name: \"GO\",\n            symbol: \"GO\",\n            decimals: 18\n        },\n        rpcUrls: [\n            \"http://127.0.0.1:8545/\"\n        ],\n        blockExplorerUrls: [\n            \"https://bscscan.com\"\n        ]\n    }\n};\nconst changeNetwork = async ({ networkName  })=>{\n    try {\n        if (!window.ethereum) throw new Error(\"No crypto wallet found\");\n        await window.ethereum.request({\n            method: \"wallet_addEthereumChain\",\n            params: [\n                {\n                    ...networks[networkName]\n                }, \n            ]\n        });\n    } catch (err) {\n        console.log(err.message);\n    }\n};\nconst handleNetworkSwitch = async ()=>{\n    const networkName = \"localhost\";\n    await changeNetwork({\n        networkName\n    });\n};\nconst checkIfWalletIsConnected = async ()=>{\n    if (!window.ethereum) return console.log(\"Please Install MetaMask\");\n    const network = await handleNetworkSwitch();\n    const account = await window.ethereum.request({\n        method: \"eth_accounts\"\n    });\n    if (account.length) {\n        return account[0];\n    } else {\n        console.log(\"Please Install MetaMask & Connect, Reload\");\n    }\n};\nconst connectWallet = async ()=>{\n    try {\n        if (!window.ethereum) return alert(\"Please install MetaMask\");\n        const network = await handleNetworkSwitch();\n        const accounts = await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n        });\n        return accounts[0];\n    } catch (error) {\n        console.log(error);\n    }\n};\n//CONTRACT\n//---FETCHING SMART CONTRACT\nconst fetchContract = (address, abi, signer)=>new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.Contract(address, abi, signer);\nconst VOTING_CONTRACT = async ()=>{\n    try {\n        const web3Modal = new (web3modal__WEBPACK_IMPORTED_MODULE_1___default())();\n        const connection = await web3Modal.connect();\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_0__.ethers.providers.Web3Provider(connection);\n        const signer = provider.getSigner();\n        const contract = fetchContract(CONTRACT_ADDRESS, CONTRACT_ABI, signer);\n        return contract;\n    } catch (error) {\n        console.log(\"Something went wrong while connecting with contract\", error);\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/constants.js\n");

/***/ }),

/***/ "./context/context.js":
/*!****************************!*\
  !*** ./context/context.js ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VOTER_DAPP_PROVIDER\": () => (/* binding */ VOTER_DAPP_PROVIDER),\n/* harmony export */   \"VOTING_DAPP_CONTEXT\": () => (/* binding */ VOTING_DAPP_CONTEXT)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3modal */ \"web3modal\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ethers */ \"ethers\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(ethers__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-hot-toast */ \"react-hot-toast\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./constants */ \"./context/constants.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([react_hot_toast__WEBPACK_IMPORTED_MODULE_6__]);\nreact_hot_toast__WEBPACK_IMPORTED_MODULE_6__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\n//INTERNAL  IMPORT\n\nconst VOTING_DAPP_CONTEXT = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createContext();\nconst VOTER_DAPP_PROVIDER = ({ children  })=>{\n    const VOTING_DAPP = \"Voting Dapp\";\n    const currency = \"MATIC\";\n    const network = \"Polygon\";\n    const { 0: loader , 1: setLoader  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const { 0: address , 1: setAddress  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    const { 0: checkVote , 1: setCheckVote  } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const notifySuccess = (msg)=>react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].success(msg, {\n            duration: 2000\n        });\n    const notifyError = (msg)=>react_hot_toast__WEBPACK_IMPORTED_MODULE_6__[\"default\"].error(msg, {\n            duration: 2000\n        });\n    const REGISTER_CANDIDATE = async (updateCandidate, image, pdf)=>{\n        const { _name , _nominationForm , _affidavit , _criminalAntecedents , _assetsAndLiabilities , _educationalQualifications , _electoralRollEntry , _securityDeposit , _partyAffiliation , _oathOrAffirmation , _photographs , _proofOfAge , _proofOfAddress , _panCardDetails , _voterIdCardDetails ,  } = updateCandidate;\n        if (!_name || !_nominationForm || !_affidavit || !_criminalAntecedents || !_assetsAndLiabilities || !_educationalQualifications || !_electoralRollEntry || !_securityDeposit || !_partyAffiliation || !_oathOrAffirmation || !_photographs || !_proofOfAge || !_proofOfAddress || !_panCardDetails || !_voterIdCardDetails || !image || !pdf) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"Registering Candidate, kindly wait...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n        const data = JSON.stringify({\n            _name,\n            _nominationForm,\n            _affidavit,\n            _criminalAntecedents,\n            _assetsAndLiabilities,\n            _educationalQualifications,\n            _electoralRollEntry,\n            _securityDeposit,\n            _partyAffiliation,\n            _oathOrAffirmation,\n            _photographs,\n            _proofOfAge,\n            _proofOfAddress,\n            _panCardDetails,\n            _voterIdCardDetails,\n            image,\n            pdf\n        });\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_5___default()({\n                method: \"POST\",\n                url: \"https://api.pinata.cloud/pinning/pinJSONToIPFS\",\n                data: data,\n                headers: {\n                    pinata_api_key: `5dcd6bb0a3f67f3a849b`,\n                    pinata_secret_api_key: `979dfefe05ff4f67a555d10f66a6c3ea5be1905dc57810a4510ca939d45c3db1`,\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            const url = `https://gateway.pinata.cloud/ipfs/${response.data.IpfsHash}`;\n            console.log(url);\n            const transaction = await CONTRACT.registerCandidate(_name, url);\n            await transaction.wait();\n            notifySuccess(\"Successfully Registered Candidate\");\n            setLoader(false);\n            window.location.href = \"/register-candidate\";\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"Registration failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const REGISTER_VOTER = async (updateVoter, image, pdf)=>{\n        const { _name , _voterAddress , _photograph , _parentOrSpouseName , _gender , _dobOrAge , _addressDetails , _epicNumber , _partNumberAndName , _assemblyConstituencyNumberAndName , _issuingAuthoritySignature , _hologramAndBarcode ,  } = updateVoter;\n        if (!_name || !_voterAddress || !_photograph || !_parentOrSpouseName || !_gender || !_dobOrAge || !_addressDetails || !_epicNumber || !_partNumberAndName || !_assemblyConstituencyNumberAndName || !_issuingAuthoritySignature || !_hologramAndBarcode || !image || !pdf) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"Registering Voter, kindly wait...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n        const data = JSON.stringify({\n            _name,\n            _voterAddress,\n            _photograph,\n            _parentOrSpouseName,\n            _gender,\n            _dobOrAge,\n            _addressDetails,\n            _epicNumber,\n            _partNumberAndName,\n            _assemblyConstituencyNumberAndName,\n            _issuingAuthoritySignature,\n            _hologramAndBarcode,\n            image,\n            pdf\n        });\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_5___default()({\n                method: \"POST\",\n                url: \"https://api.pinata.cloud/pinning/pinJSONToIPFS\",\n                data: data,\n                headers: {\n                    pinata_api_key: `5dcd6bb0a3f67f3a849b`,\n                    pinata_secret_api_key: `979dfefe05ff4f67a555d10f66a6c3ea5be1905dc57810a4510ca939d45c3db1`,\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            const url = `https://gateway.pinata.cloud/ipfs/${response.data.IpfsHash}`;\n            console.log(url);\n            const transaction = await CONTRACT.registerVoter(_name, url);\n            await transaction.wait();\n            notifySuccess(\"Successfully Registered Candidate\");\n            setLoader(false);\n            window.location.href = \"/register-voter\";\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"Registration failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const APPROVE_CANDIDATE = async (address, message)=>{\n        if (!address || !message) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"kindly wait, approving candidate...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n        try {\n            const transaction = await CONTRACT.approveCandidate(address, message);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Successfully approve Candidate\");\n            window.location.href = \"/approve-candidate\";\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"approve failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const APPROVE_VOTER = async (address, message)=>{\n        if (!address || !message) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"kindly wait, approving voter...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n        try {\n            const transaction = await CONTRACT.approveVoter(address, message);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Successfully aapprove voter\");\n            window.location.href = \"/approve-voter\";\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"approving failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const REJECT_CANDIDATE = async (address, message)=>{\n        if (!address || !message) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"kindly wait, approving candidate...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n        try {\n            const transaction = await CONTRACT.rejectCandidate(address, message);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\" Candidate Rejected\");\n            window.location.href = \"/register-candidate\";\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"approve failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const REJECT_VOTER = async (address, message)=>{\n        console.log(address, message);\n        if (!address || !message) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"kindly wait, approving voter...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n        try {\n            const transaction = await CONTRACT.rejectVoter(address, message);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Successfully Rejected\");\n            window.location.href = \"/register-voter\";\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"approving failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const SET_VOTING_PREIOD = async (voteTime)=>{\n        const { startTime , endTime  } = voteTime;\n        if (!startTime || !endTime) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"kindly wait...\");\n        setLoader(true);\n        const startDate = new Date(startTime);\n        const endDate = new Date(endTime);\n        const startTimeMilliseconds = startDate.getTime();\n        const endTimeMilliseconds = endDate.getTime();\n        const startTimeSeconds = Math.floor(startTimeMilliseconds / 1000);\n        const endTimeSeconds = Math.floor(endTimeMilliseconds / 1000);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n        try {\n            const transaction = await CONTRACT.setVotingPeriod(startTimeSeconds, endTimeSeconds);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Successfully set voting period \");\n            window.location.href = \"/\";\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"set voting period failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const UPDATE_VOTER = async (updateVoter, image, pdf)=>{\n        const { _name , _voterAddress , _photograph , _parentOrSpouseName , _gender , _dobOrAge , _addressDetails , _epicNumber , _partNumberAndName , _assemblyConstituencyNumberAndName , _issuingAuthoritySignature , _hologramAndBarcode ,  } = updateVoter;\n        if (!_name || !_voterAddress || !_photograph || !_parentOrSpouseName || !_gender || !_dobOrAge || !_addressDetails || !_epicNumber || !_partNumberAndName || !_assemblyConstituencyNumberAndName || !_issuingAuthoritySignature || !_hologramAndBarcode || !image || !pdf) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"Upadate Voter, kindly wait...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n        const data = JSON.stringify({\n            _name,\n            _voterAddress,\n            _photograph,\n            _parentOrSpouseName,\n            _gender,\n            _dobOrAge,\n            _addressDetails,\n            _epicNumber,\n            _partNumberAndName,\n            _assemblyConstituencyNumberAndName,\n            _issuingAuthoritySignature,\n            _hologramAndBarcode,\n            image,\n            pdf\n        });\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_5___default()({\n                method: \"POST\",\n                url: \"https://api.pinata.cloud/pinning/pinJSONToIPFS\",\n                data: data,\n                headers: {\n                    pinata_api_key: `5dcd6bb0a3f67f3a849b`,\n                    pinata_secret_api_key: `979dfefe05ff4f67a555d10f66a6c3ea5be1905dc57810a4510ca939d45c3db1`,\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            const url = `https://gateway.pinata.cloud/ipfs/${response.data.IpfsHash}`;\n            console.log(url);\n            const transaction = await CONTRACT.updateVoter(_name, url);\n            await transaction.wait();\n            notifySuccess(\"Successfully updated voter\");\n            setLoader(false);\n            window.location.href = \"/register-voter\";\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"Update failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const UPDATE_CANDIDATE = async (updateCandidate, image, pdf)=>{\n        const { _name , _nominationForm , _affidavit , _criminalAntecedents , _assetsAndLiabilities , _educationalQualifications , _electoralRollEntry , _securityDeposit , _partyAffiliation , _oathOrAffirmation , _photographs , _proofOfAge , _proofOfAddress , _panCardDetails , _voterIdCardDetails ,  } = updateCandidate;\n        if (!_name || !_nominationForm || !_affidavit || !_criminalAntecedents || !_assetsAndLiabilities || !_educationalQualifications || !_electoralRollEntry || !_securityDeposit || !_partyAffiliation || !_oathOrAffirmation || !_photographs || !_proofOfAge || !_proofOfAddress || !_panCardDetails || !_voterIdCardDetails || !image || !pdf) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"Updating Candidate, kindly wait...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n        const data = JSON.stringify({\n            _name,\n            _nominationForm,\n            _affidavit,\n            _criminalAntecedents,\n            _assetsAndLiabilities,\n            _educationalQualifications,\n            _electoralRollEntry,\n            _securityDeposit,\n            _partyAffiliation,\n            _oathOrAffirmation,\n            _photographs,\n            _proofOfAge,\n            _proofOfAddress,\n            _panCardDetails,\n            _voterIdCardDetails,\n            image,\n            pdf\n        });\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_5___default()({\n                method: \"POST\",\n                url: \"https://api.pinata.cloud/pinning/pinJSONToIPFS\",\n                data: data,\n                headers: {\n                    pinata_api_key: `5dcd6bb0a3f67f3a849b`,\n                    pinata_secret_api_key: `979dfefe05ff4f67a555d10f66a6c3ea5be1905dc57810a4510ca939d45c3db1`,\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            const url = `https://gateway.pinata.cloud/ipfs/${response.data.IpfsHash}`;\n            console.log(url);\n            const transaction = await CONTRACT.updateCandidate(_name, url);\n            await transaction.wait();\n            notifySuccess(\"Successfully Updated Candidate\");\n            setLoader(false);\n            window.location.href = \"/register-candidate\";\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"Update failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const CHANGE_OWNER = async (_newOwner)=>{\n        if (!_newOwner) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"kindly wait...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n        try {\n            const transaction = await CONTRACT.changeOwner(_newOwner);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Successfully updated \");\n            window.location.href = \"/\";\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"updated failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const RESET_CONTRACT = async ()=>{\n        notifySuccess(\"kindly wait...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n        try {\n            const transaction = await CONTRACT.resetContract();\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Successfully RESET \");\n            window.location.href = \"/\";\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"RESET failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    const GIVE_VOTE = async (_candidateAddress)=>{\n        if (!_candidateAddress) return notifyError(\"Data Is Missing\");\n        notifySuccess(\"kindly wait...\");\n        setLoader(true);\n        const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n        try {\n            const transaction = await CONTRACT.vote(_candidateAddress);\n            await transaction.wait();\n            setLoader(false);\n            notifySuccess(\"Successfully voted \");\n            window.location.href = \"/approve-candidate\";\n        } catch (error) {\n            setLoader(false);\n            notifySuccess(\"vote failed, kindly connect to ellection commission\");\n            console.log(error);\n        }\n    };\n    //READ DATA FUNCTIONS\n    const INITIAL_CONTRACT_DATA = async ()=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (userAddress) {\n                const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n                const startDateN = await CONTRACT.startTime();\n                const endDateN = await CONTRACT.endTime();\n                const timestamp1 = startDateN;\n                const timestamp2 = endDateN;\n                const date1 = new Date(timestamp1 * 1000);\n                const date2 = new Date(timestamp2 * 1000);\n                const options = {\n                    year: \"numeric\",\n                    month: \"2-digit\",\n                    day: \"2-digit\",\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    second: \"2-digit\"\n                };\n                const item = {\n                    startDate: date1.toLocaleDateString(\"en-US\", options),\n                    endDate: date2.toLocaleDateString(\"en-US\", options),\n                    startDateN: startDateN.toNumber(),\n                    endDateN: endDateN.toNumber()\n                };\n                return item;\n            }\n        } catch (error) {\n            notifyError(\"Something weng wrong \");\n            console.log(error);\n        }\n    };\n    const GET_REGISTER_CANDIDATES = async ()=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (userAddress) {\n                const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n                const candidates = await CONTRACT.getAllRegisteredCandidates();\n                // console.log(candidates);\n                const items = await Promise.all(candidates.map(async ({ ipfs , candidateAddress , registerId , status , voteCount , message ,  })=>{\n                    const { data: { _name , _nominationForm , _affidavit , _criminalAntecedents , _assetsAndLiabilities , _educationalQualifications , _electoralRollEntry , _securityDeposit , _partyAffiliation , _oathOrAffirmation , _photographs , _proofOfAge , _proofOfAddress , _panCardDetails , _voterIdCardDetails , image , pdf ,  } ,  } = await axios__WEBPACK_IMPORTED_MODULE_5___default().get(ipfs, {});\n                    return {\n                        address: candidateAddress,\n                        registerId: registerId?.toNumber(),\n                        status,\n                        voteCount: voteCount?.toNumber(),\n                        ipfs,\n                        message,\n                        _name,\n                        _nominationForm,\n                        _affidavit,\n                        _criminalAntecedents,\n                        _assetsAndLiabilities,\n                        _educationalQualifications,\n                        _electoralRollEntry,\n                        _securityDeposit,\n                        _partyAffiliation,\n                        _oathOrAffirmation,\n                        _photographs,\n                        _proofOfAge,\n                        _proofOfAddress,\n                        _panCardDetails,\n                        _voterIdCardDetails,\n                        image,\n                        pdf\n                    };\n                }));\n                return items;\n            }\n        } catch (error) {\n            notifyError(\"Something weng wrong \");\n            console.log(error);\n        }\n    };\n    const GET_REGISTER_VOTERS = async ()=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (userAddress) {\n                const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n                const candidates = await CONTRACT.getAllRegisteredVoters();\n                // console.log(candidates);\n                const items = await Promise.all(candidates.map(async ({ ipfs , voterAddress , registerId , status , hasVoted , message ,  })=>{\n                    const { data: { _name , _voterAddress , _photograph , _parentOrSpouseName , _gender , _dobOrAge , _addressDetails , _epicNumber , _partNumberAndName , _assemblyConstituencyNumberAndName , _issuingAuthoritySignature , _hologramAndBarcode , image , pdf ,  } ,  } = await axios__WEBPACK_IMPORTED_MODULE_5___default().get(ipfs, {});\n                    return {\n                        address: voterAddress,\n                        registerId: registerId?.toNumber(),\n                        status,\n                        hasVoted,\n                        message,\n                        ipfs,\n                        _name,\n                        _voterAddress,\n                        _photograph,\n                        _parentOrSpouseName,\n                        _gender,\n                        _dobOrAge,\n                        _addressDetails,\n                        _epicNumber,\n                        _partNumberAndName,\n                        _assemblyConstituencyNumberAndName,\n                        _issuingAuthoritySignature,\n                        _hologramAndBarcode,\n                        image,\n                        pdf\n                    };\n                }));\n                return items;\n            }\n        } catch (error) {\n            notifyError(\"Something weng wrong \");\n            console.log(error);\n        }\n    };\n    const ALL_VOTERS_VOTED = async ()=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (userAddress) {\n                const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n                const candidates = await CONTRACT.getAllVotersWhoVoted();\n                // console.log(candidates);\n                const items = await Promise.all(candidates.map(async ({ ipfs , voterAddress , registerId , status , hasVoted , message ,  })=>{\n                    const { data: { _name , _voterAddress , _photograph , _parentOrSpouseName , _gender , _dobOrAge , _addressDetails , _epicNumber , _partNumberAndName , _assemblyConstituencyNumberAndName , _issuingAuthoritySignature , _hologramAndBarcode , image , pdf ,  } ,  } = await axios__WEBPACK_IMPORTED_MODULE_5___default().get(ipfs, {});\n                    return {\n                        address: voterAddress,\n                        registerId: registerId?.toNumber(),\n                        status,\n                        hasVoted,\n                        message,\n                        ipfs,\n                        _name,\n                        _voterAddress,\n                        _photograph,\n                        _parentOrSpouseName,\n                        _gender,\n                        _dobOrAge,\n                        _addressDetails,\n                        _epicNumber,\n                        _partNumberAndName,\n                        _assemblyConstituencyNumberAndName,\n                        _issuingAuthoritySignature,\n                        _hologramAndBarcode,\n                        image,\n                        pdf\n                    };\n                }));\n                //CHECK CURRENT USER VOTING STATE\n                items?.filter((user)=>user.address.toLowerCase() == userAddress ? setCheckVote(true) : setCheckVote(false));\n                return items;\n            }\n        } catch (error) {\n            notifyError(\"Something weng wrong \");\n            console.log(error);\n        }\n    };\n    const HIGHEST_VOTED_CANDIDATE = async ()=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (userAddress) {\n                const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n                const candidates = await CONTRACT.getCurrentVotingStatus();\n                console.log(candidates);\n                const zeroAddress = \"0x0000000000000000000000000000000000000000\";\n                if (candidates?.candidateAddress.toLowerCase() === zeroAddress) return;\n                const { data: { _name , _nominationForm , _affidavit , _criminalAntecedents , _assetsAndLiabilities , _educationalQualifications , _electoralRollEntry , _securityDeposit , _partyAffiliation , _oathOrAffirmation , _photographs , _proofOfAge , _proofOfAddress , _panCardDetails , _voterIdCardDetails , image , pdf ,  } ,  } = await axios__WEBPACK_IMPORTED_MODULE_5___default().get(candidates?.ipfs);\n                const candidateData = {\n                    address: candidates?.candidateAddress,\n                    registerId: candidates?.registerId?.toNumber(),\n                    status: candidates?.status,\n                    voteCount: candidates?.voteCount?.toNumber(),\n                    ipfs: candidates?.ipfs,\n                    message: candidates?.message,\n                    _name,\n                    _nominationForm,\n                    _affidavit,\n                    _criminalAntecedents,\n                    _assetsAndLiabilities,\n                    _educationalQualifications,\n                    _electoralRollEntry,\n                    _securityDeposit,\n                    _partyAffiliation,\n                    _oathOrAffirmation,\n                    _photographs,\n                    _proofOfAge,\n                    _proofOfAddress,\n                    _panCardDetails,\n                    _voterIdCardDetails,\n                    image,\n                    pdf\n                };\n                console.log(candidateData);\n                return candidateData;\n            }\n        } catch (error) {\n            notifyError(\"Something went wrong\");\n            console.log(error);\n        }\n    };\n    const WINNER = async ()=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (userAddress) {\n                const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n                const candidates = await CONTRACT.getWinningCandidate();\n                // console.log(candidates);\n                const items = await Promise.all(candidates.map(async ({ ipfs , voterAddress , registerId , status , hasVoted , message ,  })=>{\n                    const { data: { _name , _voterAddress , _photograph , _parentOrSpouseName , _gender , _dobOrAge , _addressDetails , _epicNumber , _partNumberAndName , _assemblyConstituencyNumberAndName , _issuingAuthoritySignature , _hologramAndBarcode , image , pdf ,  } ,  } = await axios__WEBPACK_IMPORTED_MODULE_5___default().get(ipfs, {});\n                    return {\n                        voterAddress,\n                        registerId: registerId?.toNumber(),\n                        status,\n                        hasVoted,\n                        message,\n                        ipfs,\n                        _name,\n                        _voterAddress,\n                        _photograph,\n                        _parentOrSpouseName,\n                        _gender,\n                        _dobOrAge,\n                        _addressDetails,\n                        _epicNumber,\n                        _partNumberAndName,\n                        _assemblyConstituencyNumberAndName,\n                        _issuingAuthoritySignature,\n                        _hologramAndBarcode,\n                        image,\n                        pdf\n                    };\n                }));\n                return items;\n            }\n        } catch (error) {\n            notifyError(\"Something weng wrong \");\n            console.log(error);\n        }\n    };\n    const GET_SINGLE_VOTER = async (address)=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (!address) return notifyError(\"Kindly provide address\");\n            const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n            const data = await CONTRACT.getVoter(address);\n            const { data: { _name , _voterAddress , _photograph , _parentOrSpouseName , _gender , _dobOrAge , _addressDetails , _epicNumber , _partNumberAndName , _assemblyConstituencyNumberAndName , _issuingAuthoritySignature , _hologramAndBarcode , image , pdf ,  } ,  } = await axios__WEBPACK_IMPORTED_MODULE_5___default().get(data?.ipfs, {});\n            const voter = {\n                address: data?.voterAddress,\n                registerId: data?.registerId.toNumber(),\n                ipfs: data?.ipfs,\n                status: data?.status,\n                hasVoted: data?.hasVoted,\n                message: data?.message,\n                _name,\n                _voterAddress,\n                _photograph,\n                _parentOrSpouseName,\n                _gender,\n                _dobOrAge,\n                _addressDetails,\n                _epicNumber,\n                _partNumberAndName,\n                _assemblyConstituencyNumberAndName,\n                _issuingAuthoritySignature,\n                _hologramAndBarcode,\n                image,\n                pdf\n            };\n            return voter;\n        } catch (error) {\n            notifySuccess(\"Failed to get data, kindly reload page\");\n            console.log(error);\n        }\n    };\n    const GET_SINGLE_CANDIDATE = async (address)=>{\n        try {\n            const userAddress = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.checkIfWalletIsConnected)();\n            setAddress(userAddress);\n            if (!address) return notifyError(\"Kindly provide address\");\n            const CONTRACT = await (0,_constants__WEBPACK_IMPORTED_MODULE_7__.VOTING_CONTRACT)();\n            const data = await CONTRACT.getCandidate(address);\n            const { data: { _name , _nominationForm , _affidavit , _criminalAntecedents , _assetsAndLiabilities , _educationalQualifications , _electoralRollEntry , _securityDeposit , _partyAffiliation , _oathOrAffirmation , _photographs , _proofOfAge , _proofOfAddress , _panCardDetails , _voterIdCardDetails , image , pdf ,  } ,  } = await axios__WEBPACK_IMPORTED_MODULE_5___default().get(data?.ipfs, {});\n            console.log(_name);\n            const candidate = {\n                address: data?.candidateAddress,\n                registerId: data?.registerId.toNumber(),\n                ipfs: data?.ipfs,\n                status: data?.status,\n                voteCount: data?.voteCount.toNumber(),\n                message: data?.message,\n                _name,\n                _nominationForm,\n                _affidavit,\n                _criminalAntecedents,\n                _assetsAndLiabilities,\n                _educationalQualifications,\n                _electoralRollEntry,\n                _securityDeposit,\n                _partyAffiliation,\n                _oathOrAffirmation,\n                _photographs,\n                _proofOfAge,\n                _proofOfAddress,\n                _panCardDetails,\n                _voterIdCardDetails,\n                image,\n                pdf\n            };\n            return candidate;\n        } catch (error) {\n            notifySuccess(\"Failed to get data, kindly reload page\");\n            console.log(error);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(VOTING_DAPP_CONTEXT.Provider, {\n        value: {\n            GET_SINGLE_CANDIDATE,\n            GET_SINGLE_VOTER,\n            GET_REGISTER_CANDIDATES,\n            GET_REGISTER_VOTERS,\n            HIGHEST_VOTED_CANDIDATE,\n            INITIAL_CONTRACT_DATA,\n            ALL_VOTERS_VOTED,\n            WINNER,\n            notifySuccess,\n            notifyError,\n            setLoader,\n            connectWallet: _constants__WEBPACK_IMPORTED_MODULE_7__.connectWallet,\n            address,\n            checkVote,\n            OWNER_ADDRESS: _constants__WEBPACK_IMPORTED_MODULE_7__.OWNER_ADDRESS,\n            setAddress,\n            loader,\n            checkIfWalletIsConnected: _constants__WEBPACK_IMPORTED_MODULE_7__.checkIfWalletIsConnected,\n            VOTING_DAPP,\n            REGISTER_CANDIDATE,\n            REGISTER_VOTER,\n            APPROVE_VOTER,\n            APPROVE_CANDIDATE,\n            GIVE_VOTE,\n            UPDATE_CANDIDATE,\n            UPDATE_VOTER,\n            CHANGE_OWNER,\n            RESET_CONTRACT,\n            SET_VOTING_PREIOD,\n            REJECT_CANDIDATE,\n            REGISTER_VOTER,\n            REJECT_VOTER\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\manoj\\\\Downloads\\\\Prime-Minister-Voting-Dapp (1)\\\\Prime-Minister-Voting-Dapp\\\\voting-dapp\\\\context\\\\context.js\",\n        lineNumber: 1122,\n        columnNumber: 5\n    }, undefined);\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/context.js\n");

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-hot-toast */ \"react-hot-toast\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _context_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/context */ \"./context/context.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([react_hot_toast__WEBPACK_IMPORTED_MODULE_1__, _context_context__WEBPACK_IMPORTED_MODULE_3__]);\n([react_hot_toast__WEBPACK_IMPORTED_MODULE_1__, _context_context__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nfunction App({ Component , pageProps  }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_context__WEBPACK_IMPORTED_MODULE_3__.VOTER_DAPP_PROVIDER, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                        ...pageProps\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\manoj\\\\Downloads\\\\Prime-Minister-Voting-Dapp (1)\\\\Prime-Minister-Voting-Dapp\\\\voting-dapp\\\\pages\\\\_app.js\",\n                        lineNumber: 10,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_hot_toast__WEBPACK_IMPORTED_MODULE_1__.Toaster, {}, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\manoj\\\\Downloads\\\\Prime-Minister-Voting-Dapp (1)\\\\Prime-Minister-Voting-Dapp\\\\voting-dapp\\\\pages\\\\_app.js\",\n                        lineNumber: 11,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\manoj\\\\Downloads\\\\Prime-Minister-Voting-Dapp (1)\\\\Prime-Minister-Voting-Dapp\\\\voting-dapp\\\\pages\\\\_app.js\",\n                lineNumber: 9,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                \"data-cfasync\": \"false\",\n                src: \"/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\manoj\\\\Downloads\\\\Prime-Minister-Voting-Dapp (1)\\\\Prime-Minister-Voting-Dapp\\\\voting-dapp\\\\pages\\\\_app.js\",\n                lineNumber: 14,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                src: \"/assets/js/plugins/plugins.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\manoj\\\\Downloads\\\\Prime-Minister-Voting-Dapp (1)\\\\Prime-Minister-Voting-Dapp\\\\voting-dapp\\\\pages\\\\_app.js\",\n                lineNumber: 18,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                src: \"/assets/js/plugins/plugin-custom.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\manoj\\\\Downloads\\\\Prime-Minister-Voting-Dapp (1)\\\\Prime-Minister-Voting-Dapp\\\\voting-dapp\\\\pages\\\\_app.js\",\n                lineNumber: 19,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"script\", {\n                src: \"/assets/js/main.js\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\manoj\\\\Downloads\\\\Prime-Minister-Voting-Dapp (1)\\\\Prime-Minister-Voting-Dapp\\\\voting-dapp\\\\pages\\\\_app.js\",\n                lineNumber: 20,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUFpRDtBQUNsQjtBQUUwQjtBQUUxQyxTQUFTRyxHQUFHLENBQUMsRUFBRUMsU0FBUyxHQUFFQyxTQUFTLEdBQUUsRUFBRTtJQUNwRCxxQkFDRTs7MEJBQ0UsOERBQUNILGlFQUFtQjs7a0NBQ2xCLDhEQUFDRSxTQUFTO3dCQUFFLEdBQUdDLFNBQVM7Ozs7OzRCQUFJO2tDQUM1Qiw4REFBQ0osb0RBQU87Ozs7NEJBQUc7Ozs7OztvQkFDUzswQkFFdEIsOERBQUNLLFFBQU07Z0JBQ0xDLGNBQVksRUFBQyxPQUFPO2dCQUNwQkMsR0FBRyxFQUFDLGlFQUFpRTs7Ozs7b0JBQzdEOzBCQUNWLDhEQUFDRixRQUFNO2dCQUFDRSxHQUFHLEVBQUMsK0JBQStCOzs7OztvQkFBVTswQkFDckQsOERBQUNGLFFBQU07Z0JBQUNFLEdBQUcsRUFBQyxxQ0FBcUM7Ozs7O29CQUFVOzBCQUMzRCw4REFBQ0YsUUFBTTtnQkFBQ0UsR0FBRyxFQUFDLG9CQUFvQjs7Ozs7b0JBQVU7O29CQUN6QyxDQUNIO0NBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92b3Rpbmctb3JnYW5pemF0aW9uLy4vcGFnZXMvX2FwcC5qcz9lMGFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0b2FzdCwgeyBUb2FzdGVyIH0gZnJvbSBcInJlYWN0LWhvdC10b2FzdFwiO1xuaW1wb3J0IFwiLi4vc3R5bGVzL2dsb2JhbHMuY3NzXCI7XG5cbmltcG9ydCB7IFZPVEVSX0RBUFBfUFJPVklERVIgfSBmcm9tIFwiLi4vY29udGV4dC9jb250ZXh0XCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH0pIHtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPFZPVEVSX0RBUFBfUFJPVklERVI+XG4gICAgICAgIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz5cbiAgICAgICAgPFRvYXN0ZXIgLz5cbiAgICAgIDwvVk9URVJfREFQUF9QUk9WSURFUj5cblxuICAgICAgPHNjcmlwdFxuICAgICAgICBkYXRhLWNmYXN5bmM9XCJmYWxzZVwiXG4gICAgICAgIHNyYz1cIi9jZG4tY2dpL3NjcmlwdHMvNWM1ZGQ3MjgvY2xvdWRmbGFyZS1zdGF0aWMvZW1haWwtZGVjb2RlLm1pbi5qc1wiXG4gICAgICA+PC9zY3JpcHQ+XG4gICAgICA8c2NyaXB0IHNyYz1cIi9hc3NldHMvanMvcGx1Z2lucy9wbHVnaW5zLmpzXCI+PC9zY3JpcHQ+XG4gICAgICA8c2NyaXB0IHNyYz1cIi9hc3NldHMvanMvcGx1Z2lucy9wbHVnaW4tY3VzdG9tLmpzXCI+PC9zY3JpcHQ+XG4gICAgICA8c2NyaXB0IHNyYz1cIi9hc3NldHMvanMvbWFpbi5qc1wiPjwvc2NyaXB0PlxuICAgIDwvPlxuICApO1xufVxuIl0sIm5hbWVzIjpbInRvYXN0IiwiVG9hc3RlciIsIlZPVEVSX0RBUFBfUFJPVklERVIiLCJBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiLCJzY3JpcHQiLCJkYXRhLWNmYXN5bmMiLCJzcmMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/_app.js\n");

/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("axios");

/***/ }),

/***/ "ethers":
/*!*************************!*\
  !*** external "ethers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("ethers");

/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/router");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "web3modal":
/*!****************************!*\
  !*** external "web3modal" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("web3modal");

/***/ }),

/***/ "react-hot-toast":
/*!**********************************!*\
  !*** external "react-hot-toast" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = import("react-hot-toast");;

/***/ }),

/***/ "./context/VotingOrganization.json":
/*!*****************************************!*\
  !*** ./context/VotingOrganization.json ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_format":"hh-sol-artifact-1","contractName":"VotingOrganization","sourceName":"contracts/VotingOrganization.sol","abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"_candidateAddress","type":"address"},{"internalType":"string","name":"_message","type":"string"}],"name":"approveCandidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_voterAddress","type":"address"},{"internalType":"string","name":"_message","type":"string"}],"name":"approveVoter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"approvedCandidates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"approvedVoters","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"candidates","outputs":[{"internalType":"address","name":"candidateAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newOwner","type":"address"}],"name":"changeOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"endTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllApprovedCandidates","outputs":[{"components":[{"internalType":"address","name":"candidateAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Candidate[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllApprovedVoters","outputs":[{"components":[{"internalType":"address","name":"voterAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Voter[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllRegisteredCandidates","outputs":[{"components":[{"internalType":"address","name":"candidateAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Candidate[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllRegisteredVoters","outputs":[{"components":[{"internalType":"address","name":"voterAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Voter[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllVotersWhoVoted","outputs":[{"components":[{"internalType":"address","name":"voterAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Voter[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_candidateAddress","type":"address"}],"name":"getCandidate","outputs":[{"components":[{"internalType":"address","name":"candidateAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Candidate","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentVotingStatus","outputs":[{"components":[{"internalType":"address","name":"candidateAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Candidate","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_voterAddress","type":"address"}],"name":"getVoter","outputs":[{"components":[{"internalType":"address","name":"voterAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Voter","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWinningCandidate","outputs":[{"components":[{"internalType":"address","name":"candidateAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"voteCount","type":"uint256"},{"internalType":"string","name":"message","type":"string"}],"internalType":"struct VotingOrganization.Candidate","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_ipfs","type":"string"}],"name":"registerCandidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_ipfs","type":"string"}],"name":"registerVoter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"registeredCandidates","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"registeredVoters","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_candidateAddress","type":"address"},{"internalType":"string","name":"_message","type":"string"}],"name":"rejectCandidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_voterAddress","type":"address"},{"internalType":"string","name":"_message","type":"string"}],"name":"rejectVoter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"resetContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_startTime","type":"uint256"},{"internalType":"uint256","name":"_endTime","type":"uint256"}],"name":"setVotingPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_ipfs","type":"string"}],"name":"updateCandidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_ipfs","type":"string"}],"name":"updateVoter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_candidateAddress","type":"address"}],"name":"vote","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"voters","outputs":[{"internalType":"address","name":"voterAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"ipfs","type":"string"},{"internalType":"uint256","name":"registerId","type":"uint256"},{"internalType":"enum VotingOrganization.ApprovalStatus","name":"status","type":"uint8"},{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"string","name":"message","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"votersWhoVoted","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"bytecode":"","deployedBytecode":"","linkReferences":{},"deployedLinkReferences":{}}');

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/_app.js"));
module.exports = __webpack_exports__;

})();